openapi: '3.0.1'

info:
  title: User
  version: '1.0'
  description: User Management
  
servers:
  - url: http://localhost:8081/api
    description: Local server
    
paths:
  /user:
    post:
      summary: Save User
      operationId: saveUser
      parameters:
      - name: Authorization
        in: header
        description: Token de Autorizacion
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwY2UzZWY4MC03ZWM3LTQ1MmMtODdmZC0yODhhYTdkM2NhZjIiLCJyb2xlIjoiVVNFUiIsImV4cCI6MTY5OTc0MjYwMCwiaWF0IjoxNjk5NzQyMzAwfQ.cNNUtjaK7WVJouMp7jIkaJOwBlmlW5z60-UW48zLcSrb1PGJ-2lxRrd-niJikD8tHB93FR6FDH8sZYnk7cOiog
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        409:
          description: Conflict for data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth:
    post:
      summary: User authentication
      operationId: authenticate
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
              
components:
  schemas:
    UserRequest:
      type: object
      description: Data element for user
      required:
        - name
        - email
        - password
        - phones
      properties:
        name:
          type: string
          example: 'Juan Rodriguez'
          description: 'Nombres completos'
        email:
          type: string
          pattern: ^[a-zA-Z0-9]+[\w\-\.]*@[a-zA-Z0-9]+[\w\-]*[\.]cl$
          example: 'juanrodriguez1234@nisum.cl'
          description: 'Email con el formato <username>@<dominio>.cl'
        password:
          type: string
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&\.\-\_])[A-Za-z\d@$!%?&\.\-\_]{8,20}$
          example: 'Juan1234.'
          description: 'Al menos una letra mayúscula, una letra minúscula, un número, un carácter especial (@, $, !, %, ?, &, ., -, _), mínimo ocho y máximo 20 caracteres'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneRequest'
    PhoneRequest:
      type: object
      description: Data element for phone
      required:
        - number
        - cityCode
        - countryCode
      properties:
        number:
          type: string
          example: '123456789'
          description: 'Número de celular o teléfono'
        cityCode:
          type: string
          example: '1'
          description: 'Código telefónico de ciudad'
        countryCode:
          type: string
          example: '57'
          description: 'Código telefónico de país'
    UserResponse:
      type: object
      description: Data for user response
      required:
        - id
        - created
        - modified
        - lastLogin
        - token
        - isActive
      properties:
        id:
          type: string
          example: '97d9d06c-ec45-4c46-8cb3-a9b2620a59e9'
          description: 'Id de usuario (UUID)'
        created:
          type: string
          example: '2023-11-10'
          description: 'Fecha de creación de usuario'
        modified:
          type: string
          example: '2023-11-10'
          description: 'Fecha de modificación de usuario'
        lastLogin:
          type: string
          example: '2023-11-10'
          description: 'Fecha de última sesión'
        token:
          type: string
          example: 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJNYXJ0aW4gR2FyY2lhIiwicm9sZSI6IlVTRVIiLCJleHAiOjE2OTk3NDk5ODIsImlhdCI6MTY5OTc0OTY4Mn0.BGxLR3cddrLAJ0g5eyHANGIPeNs573eEvI0rbyXxFXoSclieDcxNTgVkrvUdcEmqr7l1WUaLUTYVSI3h9vUNBg'
          description: 'Último token de creación o sesión'
        isActive:
          type: boolean
          example: true
          description: 'Estado de actividad'
    ErrorResponse:
      type: object
      description: Data for error response
      properties:
        message:
          type: string
          example: 'Error'
          description: 'Mensaje de error'
    AuthRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: 'martingarcia@espn.cl'
          description: 'Email de usuario'
        password:
          type: string
          example: 'martinG_1234'
          description: 'Password de usuario'
    JwtResponse:
      type: object
      properties:
        jwt:
          type: string
          example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJNYXJ0aW4gR2FyY2lhIiwicm9sZSI6IlVTRVIiLCJleHAiOjE2OTk3NDk5ODIsImlhdCI6MTY5OTc0OTY4Mn0.BGxLR3cddrLAJ0g5eyHANGIPeNs573eEvI0rbyXxFXoSclieDcxNTgVkrvUdcEmqr7l1WUaLUTYVSI3h9vUNBg'
          description: 'JWT generado'